{"version":3,"sources":["logo.svg","components/CreateTask.js","components/TaskItem.js","components/TaskList.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["CreateTask","props","handleChange","event","setState","task","target","value","handleSubmit","preventDefault","createTask","state","onSubmit","this","type","placeholder","onChange","autoFocus","class","Component","TaskItem","setEditingState","isEditing","toggleTask","id","deleteTask","editTask","taskItem","className","onClick","readOnly","checked","isCompleted","TaskList","tasks","map","index","localStorage","getItem","JSON","parse","Main","trim","push","setItem","stringify","alert","taskId","splice","React","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAe,I,wCCEMA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,KAAMF,EAAMG,OAAOC,SAPlB,EASnBC,aAAe,SAACL,GACdA,EAAMM,iBACN,EAAKR,MAAMS,WAAW,EAAKC,MAAMN,MACjC,EAAKD,SAAS,CAAEC,KAAM,MAVtB,EAAKM,MAAQ,CACXN,KAAM,IAHS,E,0CAcnB,WACE,OACE,uBAAMO,SAAUC,KAAKL,aAArB,UACE,uBACEM,KAAK,OACLC,YAAY,aACZR,MAAOM,KAAKF,MAAMN,KAClBW,SAAUH,KAAKX,aACfe,WAAS,IAEX,wBAAQC,MAAM,MAAMJ,KAAK,SAAzB,wB,GAzBgCK,aCAnBC,E,kDACnB,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IAMRoB,gBAAkB,SAACC,GACjB,EAAKlB,SAAS,CAAEkB,UAAWA,KARV,EAUnBC,WAAa,WACX,EAAKtB,MAAMsB,WAAW,EAAKtB,MAAMuB,KAXhB,EAanBC,WAAa,WACX,EAAKxB,MAAMwB,WAAW,EAAKxB,MAAMuB,KAdhB,EAgBnBtB,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,KAAMF,EAAMG,OAAOC,SAjBlB,EAmBnBC,aAAe,SAACL,GACdA,EAAMM,iBACN,EAAKR,MAAMyB,SAAS,EAAKzB,MAAMuB,GAAI,EAAKb,MAAMN,MAC9C,EAAKD,SAAS,CAAEkB,WAAW,KApB3B,EAAKX,MAAQ,CACXN,KAAM,EAAKJ,MAAM0B,SAAStB,KAC1BiB,WAAW,GAJI,E,0CAwBnB,WAAU,IAAD,OACP,OACE,6BACGT,KAAKF,MAAMW,UACV,qCACE,6BACE,sBAAMV,SAAUC,KAAKL,aAArB,SACE,uBACED,MAAOM,KAAKF,MAAMN,KAClBW,SAAUH,KAAKX,aACfe,WAAS,QAIf,+BACE,wBACEW,UAAU,OACVC,QAAShB,KAAKL,aACdM,KAAK,SAHP,kBAOA,wBACEc,UAAU,OACVC,QAAS,kBAAM,EAAKR,iBAAgB,IACpCP,KAAK,SAHP,wBAUJ,qCACE,qBAAIc,UAAU,OAAOC,QAAShB,KAAKU,WAAnC,UACE,uBACET,KAAK,WACLgB,UAAQ,EACRC,QAASlB,KAAKZ,MAAM0B,SAASK,cAE/B,sBACEJ,UACEf,KAAKZ,MAAM0B,SAASK,YAChB,YACA,gBAJR,SAOGnB,KAAKZ,MAAM0B,SAAStB,UAGzB,+BACE,wBACEuB,UAAU,OACVC,QAAS,kBAAM,EAAKR,iBAAgB,IAFtC,kBAMA,wBAAQO,UAAU,SAASC,QAAShB,KAAKY,WAAzC,gC,GAjFwBN,aCCjBc,E,4JACnB,WAAU,IAAD,OACP,OACE,kCACE,gCACE,+BACE,sCACA,8CAGJ,gCACGpB,KAAKZ,MAAMiC,MAAMC,KAAI,SAAC9B,EAAM+B,GAAP,OACpB,cAAC,EAAD,CAEET,SAAUtB,EACVmB,GAAIY,EACJX,WAAY,EAAKxB,MAAMwB,WACvBC,SAAU,EAAKzB,MAAMyB,SACrBH,WAAY,EAAKtB,MAAMsB,YALlBa,e,GAbmBjB,aCChCe,EAAQG,aAAaC,QAAQ,SAC/BC,KAAKC,MAAMH,aAAaC,QAAQ,UAChC,GACiBG,E,kDACnB,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IAKRS,WAAa,SAACL,GACQ,KAAhBA,EAAKqC,QAITR,EAAMS,KAAK,CAAEtC,OAAM2B,aAAa,IAChC,EAAK5B,SAAS,CAAE8B,MAAOA,IACvBG,aAAaO,QAAQ,QAASL,KAAKM,UAAUX,KAL3CY,MAAM,wBARS,EAenBvB,WAAa,SAACwB,GACZ,IAAMpB,EAAWO,EAAMa,GACvBpB,EAASK,aAAeL,EAASK,YACjC,EAAK5B,SAAS,CAAE8B,MAAOA,IACvBG,aAAaO,QAAQ,QAASL,KAAKM,UAAUX,KAnB5B,EAqBnBT,WAAa,SAACsB,GACZb,EAAMc,OAAOD,EAAQ,GACrB,EAAK3C,SAAS,CAAE8B,MAAOA,IACvBG,aAAaO,QAAQ,QAASL,KAAKM,UAAUX,KAxB5B,EA0BnBR,SAAW,SAACqB,EAAQ1C,GACD6B,EAAMa,GACd1C,KAAOA,EAChB,EAAKD,SAAS,CAAE8B,MAAOA,IACvBG,aAAaO,QAAQ,QAASL,KAAKM,UAAUX,KA5B7C,EAAKvB,MAAQ,CACXuB,MAAOA,GAHQ,E,0CAgCnB,WACE,OACE,sBAAKN,UAAU,OAAf,UACE,0CACA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAAYlB,WAAYG,KAAKH,aAC7B,uBACA,cAAC,EAAD,CACEwB,MAAOrB,KAAKF,MAAMuB,MAClBT,WAAYZ,KAAKY,WACjBC,SAAUb,KAAKa,SACfH,WAAYV,KAAKU,uB,GA5CK0B,IAAM9B,WCCzB+B,MAJf,WACE,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7b4e98a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\n\r\nexport default class CreateTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task: '',\r\n    };\r\n  }\r\n  handleChange = (event) => {\r\n    this.setState({ task: event.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.createTask(this.state.task);\r\n    this.setState({ task: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter task\"\r\n          value={this.state.task}\r\n          onChange={this.handleChange}\r\n          autoFocus\r\n        />\r\n        <button class=\"add\" type=\"submit\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class TaskItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task: this.props.taskItem.task,\r\n      isEditing: false,\r\n    };\r\n  }\r\n  setEditingState = (isEditing) => {\r\n    this.setState({ isEditing: isEditing });\r\n  };\r\n  toggleTask = () => {\r\n    this.props.toggleTask(this.props.id);\r\n  };\r\n  deleteTask = () => {\r\n    this.props.deleteTask(this.props.id);\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({ task: event.target.value });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.editTask(this.props.id, this.state.task);\r\n    this.setState({ isEditing: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <tr>\r\n        {this.state.isEditing ? (\r\n          <>\r\n            <td>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                  value={this.state.task}\r\n                  onChange={this.handleChange}\r\n                  autoFocus\r\n                />\r\n              </form>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"save\"\r\n                onClick={this.handleSubmit}\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </button>\r\n              <button\r\n                className=\"back\"\r\n                onClick={() => this.setEditingState(false)}\r\n                type=\"button\"\r\n              >\r\n                Back\r\n              </button>\r\n            </td>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <td className=\"task\" onClick={this.toggleTask}>\r\n              <input\r\n                type=\"checkbox\"\r\n                readOnly\r\n                checked={this.props.taskItem.isCompleted}\r\n              />\r\n              <span\r\n                className={\r\n                  this.props.taskItem.isCompleted\r\n                    ? 'completed'\r\n                    : 'not-completed'\r\n                }\r\n              >\r\n                {this.props.taskItem.task}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"edit\"\r\n                onClick={() => this.setEditingState(true)}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button className=\"delete\" onClick={this.deleteTask}>\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </>\r\n        )}\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nexport default class TaskList extends Component {\r\n  render() {\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Task</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.tasks.map((task, index) => (\r\n            <TaskItem\r\n              key={index}\r\n              taskItem={task}\r\n              id={index}\r\n              deleteTask={this.props.deleteTask}\r\n              editTask={this.props.editTask}\r\n              toggleTask={this.props.toggleTask}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport CreateTask from './CreateTask';\r\nimport TaskList from './TaskList';\r\n\r\nconst tasks = localStorage.getItem('tasks')\r\n  ? JSON.parse(localStorage.getItem('tasks'))\r\n  : [];\r\nexport default class Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: tasks,\r\n    };\r\n  }\r\n  createTask = (task) => {\r\n    if (task.trim() === '') {\r\n      alert(\"Task can't be empty\");\r\n      return;\r\n    }\r\n    tasks.push({ task, isCompleted: false });\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  };\r\n  toggleTask = (taskId) => {\r\n    const taskItem = tasks[taskId];\r\n    taskItem.isCompleted = !taskItem.isCompleted;\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  };\r\n  deleteTask = (taskId) => {\r\n    tasks.splice(taskId, 1);\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  };\r\n  editTask = (taskId, task) => {\r\n    const taskItem = tasks[taskId];\r\n    taskItem.task = task;\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem('tasks', JSON.stringify(tasks));\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <h1>My ToDos</h1>\r\n        <div className=\"content\">\r\n          <CreateTask createTask={this.createTask} />\r\n          <br />\r\n          <TaskList\r\n            tasks={this.state.tasks}\r\n            deleteTask={this.deleteTask}\r\n            editTask={this.editTask}\r\n            toggleTask={this.toggleTask}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from './components/Main';\r\n\r\nfunction App() {\r\n  return <Main />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}